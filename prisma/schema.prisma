// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "postgresql"    // change to "sqlite" for local file DB if desired
  url      = env("DATABASE_URL")
}

enum CategoryType {
  INCOME
  EXPENSE
}

model User {
  id         Int          @id @default(autoincrement())
  clerkId    String       @unique                     // optional: link to Clerk identity
  email      String?      @unique
  firstName  String?
  lastName   String?
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt

  // relations
  categories Category[] 
  transactions Transaction[]

  @@map("users")
}

model Category {
  id            Int          @id @default(autoincrement())
  name          String
  type          CategoryType
  monthlyTarget Decimal?     @db.Decimal(12, 2)       // optional monthly target amount
  userId        Int
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt

  // relations
  user          User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions  Transaction[]

  @@map("categories")
  @@index([userId])
}

model Transaction {
  id          Int       @id @default(autoincrement())
  amount      Decimal   @db.Decimal(12, 2)
  description String?
  dueDate     DateTime?
  userId      Int
  categoryId  Int?      // optional: a transaction may or may not be assigned a category
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  // relations
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  category    Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)

  @@map("transactions")
  @@index([userId])
  @@index([categoryId])
}
